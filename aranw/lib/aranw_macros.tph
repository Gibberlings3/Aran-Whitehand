/* begin definition of all macros in the project */

/* Macro definitions */

/* Set Sound Choices */
/* note - set2_5_riuriuchiu.wav has been pulled from tavern talks as it causes a crash on BG2:EE */
DEFINE_ACTION_MACRO ~chooseasoundtrack~ BEGIN
//	OUTER_SPRINT ~soundchoice~ ~placeholder_value~
//	OUTER_WHILE (!(IS_AN_INT ~soundchoice~) OR (~soundchoice~ > 0x3) OR (~soundchoice~ < 0x1)) BEGIN
//		PRINT @30071
//		ACTION_READLN ~soundchoice~
//	END
	ACTION_IF (%soundchoice_aw% = 1) THEN BEGIN
		/* sound themes : default */
		/* Source - http://www.jsayles.com/familypages/earlymusic.htm - "All MP3 recordings listed below, may be downloaded and distributed free of charge. The recordings may be used for any purpose whatsoever.	In fact, that's the only reason I'm doing this to promote Early Music, and especially to promote the musical selections recorded below." - J. Sayles, performer */
		COPY ~aranw/media/wavc/set2_1_orosetta.wav~ 					~aranw/media/wavc/c-arnfth.wav~ /* 1 friend, upbeat  */
		COPY ~aranw/media/wavc/set2_2_praetorius.wav~ 					~aranw/media/wavc/c-arnfti.wav~ /* 2 friend, introspective */
		COPY ~aranw/media/wavc/set2_3_sweetnymphcometothylover.wav~		~aranw/media/wavc/c-arnltu.wav~ /* 3 love, upbeat  */
		COPY ~aranw/media/wavc/set2_4_aprilinmistressface.wav~			~aranw/media/wavc/c-arnltl.wav~ /* 4 love, introspective */
		COPY ~aranw/media/wavc/set1_5_praetorius_volte.wav~				~aranw/media/wavc/c-arandf.wav~ /* 5 drunk or in an inn, fast */
		COPY ~aranw/media/wavc/set2_6_comeagain.wav~					~aranw/media/wavc/c-arands.wav~ /* 6 inn, introspective  */
		PRINT @30072
		ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
			OUTER_SPRINT aranw_soundchoice @30072
			APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, %soundchoice_aw%, %aranw_soundchoice%~
		END
	END
	ACTION_IF (%soundchoice_aw% = 2) THEN BEGIN
		/* sound themes */
		/* Set 3 - Vox Vulgaris - middle ages with a twist. Source - The group. Selections clipped from three of their online materials, Cantiga 166, Rokatanc, and Saltarello. Copyrighted, so again, if an official someone objects for use in a free mod, I'll just use it on my own install. I have to thank the husband and wife team that developed mount & Blade, because I didn't know there was such great midaevil re-covers from groups like Vox Vulgaris and Hungary Debrecen, until modders put them into their M&B mods! */
		COPY ~aranw/media/wavc/set3_1_vox_vulgaris_rokatanc.wav~		~aranw/media/wavc/c-arnfth.wav~ /* 1 friend, upbeat  */
		COPY ~aranw/media/wavc/set3_2_vox_vulgaris_rokatanc.wav~		~aranw/media/wavc/c-arnfti.wav~ /* 2 friend, introspective */
		COPY ~aranw/media/wavc/set3_3_vox_vulgaris_cantiga_166.wav~		~aranw/media/wavc/c-arnltu.wav~ /* 3 love, upbeat  */
		COPY ~aranw/media/wavc/set3_3_vox_vulgaris_cantiga_166.wav~		~aranw/media/wavc/c-arnltl.wav~ /* 4 love, introspective */
		COPY ~aranw/media/wavc/set1_5_praetorius_volte.wav~				~aranw/media/wavc/c-arandf.wav~ /* 5 drunk or in an inn, fast  */
		COPY ~aranw/media/wavc/set3_6_vox_vulgaris_saltarello.wav~		~aranw/media/wavc/c-arands.wav~ /* 6 inn, introspective  */
		PRINT @30073
		ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
			OUTER_SPRINT aranw_soundchoice @30073
			APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, %soundchoice_aw%, %aranw_soundchoice%~
		END
	END
	ACTION_IF (%soundchoice_aw% = 3) THEN BEGIN
		/* sound themes */
		/* Set 1 - brass ensemble, Suzato, The Danseyre. Renaissance, done in a brass arrangement. Czech Brass. Source - Czech Brass album "Virtuosi Baroque Music", on the Sonnleitner Verlag label. Copyrighted, so if someone objects to the rip for a free mod, I'll take it out. But if you find one of their recordings, they are solid brass, more calm in their interpretations that the Philip Jones Brass Ensemble or Canadian Brass. */
		/* Inn/Drunk clips: #5 Praetorius's Volte, unknown recording. #6, see Set 2 #5 */
		COPY ~aranw/media/wavc/set1_1_suzato_danserye_mourisque.wav~	~aranw/media/wavc/c-arnfth.wav~ /* 1 friend, upbeat  */
		COPY ~aranw/media/wavc/set1_2_suzato_danserye_battaille.wav~ 	~aranw/media/wavc/c-arnfti.wav~ /* 2 friend, introspective */
		COPY ~aranw/media/wavc/set1_3_suzato_danserye_bransle.wav~		~aranw/media/wavc/c-arnltu.wav~ /* 3 love, upbeat */
		COPY ~aranw/media/wavc/set1_4_suzato_danserye_monamy.wav~		~aranw/media/wavc/c-arnltl.wav~ /* 4 love, introspective */
		COPY ~aranw/media/wavc/set1_5_praetorius_volte.wav~				~aranw/media/wavc/c-arandf.wav~ /* 5 drunk or in an inn, fast  */
		COPY ~aranw/media/wavc/set2_6_comeagain.wav~					~aranw/media/wavc/c-arands.wav~ /* 6 inn, introspective */
		PRINT @30074
		ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
			OUTER_SPRINT aranw_soundchoice @30074
			APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, %soundchoice_aw%, %aranw_soundchoice%~
		END
	END
END // of macro

DEFINE_ACTION_MACRO ~aran_report_status~ BEGIN
	ACTION_MATCH ~%aran_wealth%~
		WITH
		1
		BEGIN
			PRINT @30075
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_wealthchoice @30075
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_wealth%, %aranw_wealthchoice%~
			END
		END
		2
		BEGIN
			PRINT @30076
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_wealthchoice @30076
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_wealth%, %aranw_wealthchoice%~
			END
		END
		3
		BEGIN
			PRINT @30077
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_wealthchoice @30077
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_wealth%, %aranw_wealthchoice%~
			END	
		END
		DEFAULT
			PRINT @30078
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_wealthchoice @30078
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_wealth%, %aranw_wealthchoice%~
			END
		END
		ACTION_MATCH ~%aran_armor_choice%~
		WITH
		1
		BEGIN
			PRINT @30079
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30079
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
		2
		BEGIN
			PRINT @30080
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30080
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
		3
		BEGIN
			PRINT @30081
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30081
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
		4
		BEGIN
			PRINT @30082
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30082
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
		5
		BEGIN
			PRINT @30083
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30083
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
		DEFAULT
			PRINT @30078
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT %aranw_armorchoice% @30078
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_armor_choice%, %aranw_armorchoice%~
			END
		END
	ACTION_MATCH	~%aran_weapon_set%~
		WITH
		1
		BEGIN
			PRINT @30084
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30084
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		2
		BEGIN
			PRINT @30085
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30085
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		3
		BEGIN
			PRINT @30086
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30086
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		4
		BEGIN
			PRINT @30087
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30087
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		5
		BEGIN
			PRINT @30088
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30088
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		6
		BEGIN
			PRINT @30089
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30089
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		7
		BEGIN
			PRINT @30090
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30090
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		8
		BEGIN
			PRINT @30091
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30091
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		9
		BEGIN
			PRINT @30092
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30092
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		10
		BEGIN
			PRINT @30093
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30093
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		11
		BEGIN
			PRINT @30094
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30094
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END	
		END
		12
		BEGIN
			PRINT @30095
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30095
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END
		DEFAULT
			PRINT @30078
			ACTION_IF FILE_EXISTS ~override\c-arandebugger01.log~ THEN BEGIN
				OUTER_SPRINT aranw_weapons_used @30078
				APPEND ~c-arandebugger01.log~ ~Component %COMPONENT_NUMBER%, choice %aran_weapon_set%, %aranw_weapons_used%~
			END
		END

END // of macro definition

/* Installing one of the class choice subcomponents does OUTER_SET class_choice_aw = 1 or 2 or 3 or 4 or 5 (5 = no player choices wanted).  */
/* As of February 2019, edited to cull this down for a default install and then subcomponents to change that install to help mod auto-installers and remove ACTION_READLN */
DEFINE_ACTION_MACRO customized_cre_choice BEGIN	// define the instruction set to be called in other places
	ACTION_MATCH ~%class_choice_aw%~	// the thing we are checking to allow the code to "swing" to variants, the "case"
	WITH
	1	 // the first check. If class_choice_aw = 1, the next stuff will work, else check the next
	BEGIN /* mage dual-class build */
//		OUTER_FOR( aran_wealth = 0 ; ~%aran_wealth%~ STRING_COMPARE_REGEXP ~^[123]$~ ; )BEGIN
//			PRINT @30096
//			ACTION_READLN aran_wealth
//		END
//		OUTER_FOR( aran_weapon_choices = 0 ; ~%aran_weapon_choices%~ STRING_COMPARE_REGEXP ~^[123]$~ ; )BEGIN // one way of setting up for READLN
//			PRINT @30097
//			ACTION_READLN weapon_choices
//		END
		/* we WERE using READLN values to set a variable - the mod range of possible combos is 1 to 15 inclusive, but for nopw simplified - so we just read it directly into the old code. omeday someone can enable all these possibilities again for advanced users using a custom .ini, but for now let's just help out the mod auto-install tools and set the values. */
		ACTION_MATCH	~%aran_weapon_choices%~	 // check this value
		WITH	// against the following 3 cases, so
		1
		BEGIN
			OUTER_SET ~aran_weapon_set~ = 1	//	Long Sword, Shield, Dagger
		END
		2
		BEGIN
			OUTER_SET ~aran_weapon_set~ = 2 // Long Sword, Shield, Quarterstaff
		END
		3
		BEGIN
			OUTER_SET ~aran_weapon_set~ = 3 // Long Sword, Shield, Potions of healing
		END
		DEFAULT	// this should never run, but as an emergency fallback
			OUTER_SET ~aran_weapon_set~ = 6 // Long Sword, Shield, Long Bow
		END // of default
//		OUTER_FOR( aran_armor_choice = 0 ; ~%aran_armor_choice%~ STRING_COMPARE_REGEXP ~^[12345]$~ ; )BEGIN
//			PRINT @30098
//			ACTION_READLN aran_armor_choice
//		END // of O_F
		LAUNCH_ACTION_MACRO ~aran_report_status~
		COPY ~aranw/cre/c-arnmge.cre~ ~override/c-aran7.cre~ // copy the base .cre into the game, and
			PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // if the .cre is valid, then
				LAUNCH_PATCH_MACRO ~aran_cre_setup~	// patch in player choices using this pre-defined code
			END ELSE BEGIN
			 PATCH_FAIL @61
			END
	 END // of dual-to-mage swing
	 2 // the second check. If class_choice_aw = 2, the next stuff will work, else check the next
	 BEGIN /* cleric dual-class build */
//	 	OUTER_FOR( aran_wealth = 0 ; ~%aran_wealth%~ STRING_COMPARE_REGEXP ~^[123]$~ ; )BEGIN
//	 	 	 PRINT @30096
//				ACTION_READLN aran_wealth
//		END
//		OUTER_FOR( weapon_choices = 0 ; ~%aran_weapon_choices%~ STRING_COMPARE_REGEXP ~^[1234]$~ ; )BEGIN // one way of setting up for READLN
//	 	 		PRINT @30100
//				ACTION_READLN ~weapon_choices~
//			END
			ACTION_MATCH	~%aran_weapon_choices%~	 // check this value
			WITH	// against the following 3 cases, with 4 or anything else defaulting to a "standard choice"
			1
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 4 // Long Sword, Shield, Mace
			END
			2
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 2 // Long Sword, Shield, Quarterstaff
			END
			3
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 12 // Long Sword, Shield, Hammer
			END
			DEFAULT	// this will	run on 4, or as an emergency fallback
				OUTER_SET ~aran_weapon_set~ = 5 // Long Sword, Shield, Flail
			END
//			OUTER_FOR( aran_armor_choice = 0 ; ~%aran_armor_choice%~ STRING_COMPARE_REGEXP ~^[12345]$~ ; )BEGIN
//				PRINT @30098
//				ACTION_READLN aran_armor_choice
//			END // of O_F
		LAUNCH_ACTION_MACRO ~aran_report_status~
			COPY ~aranw/cre/c-arnclr.cre~ ~override/c-aran7.cre~ // copy the base .cre into the game, and
				PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // if the .cre is valid, then
					LAUNCH_PATCH_MACRO ~aran_cre_setup~	// patch in player choices using this pre-defined code
				END ELSE BEGIN
					PATCH_FAIL @30099
				END
		END // of dual-to-cleric swing
		3 // the third check. If class_choice_aw = 3, the next stuff will work, else check the next
		BEGIN /* fighter single-class build */
//			OUTER_FOR( aran_wealth = 0 ; ~%aran_wealth%~ STRING_COMPARE_REGEXP ~^[123]$~ ; )BEGIN
//				PRINT @30101
//				ACTION_READLN aran_wealth
//			END
//			OUTER_FOR( weapon_choices = 0 ; ~%aran_weapon_choices%~ STRING_COMPARE_REGEXP ~^[123456]$~ ; )BEGIN
//				PRINT @30102
//				ACTION_READLN ~weapon_choices~
//			END
			ACTION_MATCH	~%aran_weapon_choices%~	 // check this value
			WITH	// against the following 3 cases, with 4 or anything else defaulting to a '"standard choice"
			1
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 1 // Long Sword, Shield, Dagger
			END
			2
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 6 // Long Sword, Shield, Long Bow
			END
			3
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 3 // Long Sword, Shield, Potions of healing
			END
			4
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 7 // Bastard Sword, Shield, Dagger
			END
			5
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 8 // Bastard Sword, Shield, Long Bow
			END
			DEFAULT	// this will	run on 6, or as an emergency fallback
				OUTER_SET ~aran_weapon_set~ = 12 // Long Sword, Shield, Hammer
			END // of default
//			OUTER_FOR( aran_armor_choice = 0 ; ~%aran_armor_choice%~ STRING_COMPARE_REGEXP ~^[12345]$~ ; )BEGIN
//				PRINT @30098
//				ACTION_READLN aran_armor_choice
//			END // of O_F
			LAUNCH_ACTION_MACRO ~aran_report_status~
			COPY ~aranw/cre/c-arnftr.cre~ ~override/c-aran7.cre~ // copy the base .cre into the game, and
				PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // if the .cre is valid, then
					LAUNCH_PATCH_MACRO ~aran_cre_setup~	// patch in player choices using this pre-defined code
				END ELSE BEGIN
					PATCH_FAIL @30099
				END
		END // of just-a-fighter swing
		4 // the next check. If class_choice_aw = 4, the next stuff will work, else check the next
		BEGIN /* thief dual-class build */
//			OUTER_FOR( aran_wealth = 0 ; ~%aran_wealth%~ STRING_COMPARE_REGEXP ~^[123]$~ ; )BEGIN
//				PRINT @30096
//				ACTION_READLN aran_wealth
//			END
//			OUTER_FOR( weapon_choices = 0 ; ~%aran_weapon_choices%~ STRING_COMPARE_REGEXP ~^[12345]$~ ; )BEGIN
//				PRINT @30104
//				ACTION_READLN ~weapon_choices~
//			END
			ACTION_MATCH	~%aran_weapon_choices%~	 // check this value
			WITH	// against the following 3 cases, with 4 or anything else defaulting to a "standard choice"
			1
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 1 // Long Sword, Shield, Dagger
			END
			2
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 9 // Long Sword, Shield, Crossbow
			END
			3
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 3 // Long Sword, Shield, Potions of healing
			END
			4
			BEGIN
				OUTER_SET ~aran_weapon_set~ = 10 // Short Sword, Shield, Dagger
			END
			DEFAULT	// this will	run on 5, or as an emergency fallback
				OUTER_SET ~aran_weapon_set~ = 11 // Short Sword, Shield, Crossbow
			END // of default
//			OUTER_FOR( aran_armor_choice = 0 ; ~%aran_armor_choice%~ STRING_COMPARE_REGEXP ~^[12345]$~ ; )BEGIN
//				PRINT @30098
//				ACTION_READLN aran_armor_choice
//			END // of O_F
			LAUNCH_ACTION_MACRO ~aran_report_status~
			COPY ~aranw/cre/c-arnthf.cre~ ~override/c-aran7.cre~ // copy the base .cre into the game, and
				PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // if the .cre is valid, then
					LAUNCH_PATCH_MACRO ~aran_cre_setup~	// patch in player choices using this pre-defined code
				END ELSE BEGIN
					PATCH_FAIL @61
				END
		END // of dual-to-thief swing
		DEFAULT	// the fall-through check. If %class_choice% was not 1, 2, 3, or 4, the default code will run
		PRINT @30026
		/* Set up the variables for a default .cre so BWP folks don't have to deal with READLN */
		OUTER_SET ~aran_wealth~ = 2 // experienced mercenary with some resources
		OUTER_SET ~aran_weapon_set~ = 6 // Long Sword, Shield, Long Bow
		OUTER_SET ~aran_armor_choice~ = 4 // splint
		LAUNCH_ACTION_MACRO ~aran_report_status~
		COPY ~aranw/cre/c-arnftr.cre~ ~override/c-aran7.cre~ // copy the base .cre into the game, and
			PATCH_IF (SOURCE_SIZE > 0x2d3) THEN BEGIN // if the .cre is valid, then
				LAUNCH_PATCH_MACRO ~aran_cre_setup~	// patch in player choices using this pre-defined code
			END ELSE BEGIN
				PATCH_FAIL @61
			END
		END // of default swing

END // of define action macro

/* Clean up copies of existing resources so they can be reused */ 
DEFINE_PATCH_MACRO ~support_cre_cleanup~ BEGIN
	WRITE_LONG INITIAL_MEETING (BNOT 0x0)
	WRITE_LONG DIALOGUE_HOSTILE (BNOT 0x0)
	WRITE_LONG DIALOGUE_DEFAULT (BNOT 0x0)
	WRITE_LONG MORALE (BNOT 0x0)
	WRITE_LONG HAPPY (BNOT 0x0)
	WRITE_LONG UNHAPPY_ANNOYED (BNOT 0x0)
	WRITE_LONG UNHAPPY_SERIOUS (BNOT 0x0)
	WRITE_LONG UNHAPPY_BREAKING (BNOT 0x0)
	WRITE_LONG LEADER (BNOT 0x0)
	WRITE_LONG TIRED (BNOT 0x0)
	WRITE_LONG BORED (BNOT 0x0)
	WRITE_LONG BATTLE_CRY1 (BNOT 0x0)
	WRITE_LONG BATTLE_CRY2 (BNOT 0x0)
	WRITE_LONG BATTLE_CRY3 (BNOT 0x0)
	WRITE_LONG BATTLE_CRY4 (BNOT 0x0)
	WRITE_LONG BATTLE_CRY5 (BNOT 0x0)
	WRITE_LONG HURT (BNOT 0x0)
	WRITE_LONG AREA_FOREST (BNOT 0x0)
	WRITE_LONG AREA_CITY (BNOT 0x0)
	WRITE_LONG AREA_DUNGEON (BNOT 0x0)
	WRITE_LONG AREA_DAY (BNOT 0x0)
	WRITE_LONG AREA_NIGHT (BNOT 0x0)
	WRITE_LONG SELECT_COMMON1 (BNOT 0x0)
	WRITE_LONG SELECT_COMMON2 (BNOT 0x0)
	WRITE_LONG SELECT_COMMON3 (BNOT 0x0)
	WRITE_LONG SELECT_COMMON4 (BNOT 0x0)
	WRITE_LONG SELECT_COMMON5 (BNOT 0x0)
	WRITE_LONG SELECT_COMMON6 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION1 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION2 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION3 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION4 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION5 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION6 (BNOT 0x0)
	WRITE_LONG SELECT_ACTION7 (BNOT 0x0)
	WRITE_LONG SELECT_RARE1 (BNOT 0x0)
	WRITE_LONG SELECT_RARE2 (BNOT 0x0)
	WRITE_LONG CRITICAL_HIT (BNOT 0x0)
	WRITE_LONG CRITICAL_MISS (BNOT 0x0)
	WRITE_LONG TARGET_IMMUNE (BNOT 0x0)
	WRITE_LONG INVENTORY_FULL (BNOT 0x0)
	WRITE_LONG PICKED_POCKET (BNOT 0x0)
	WRITE_LONG HIDDEN_IN_SHADOWS (BNOT 0x0)
	WRITE_LONG SPELL_DISRUPTED (BNOT 0x0)
	WRITE_LONG SET_A_TRAP (BNOT 0x0)
	WRITE_LONG BIO (BNOT 0x0)
	WRITE_ASCIIE 0x34  ~%DEST_RES%~ #8	/*	small portrait */
	WRITE_ASCIIE 0x3c  ~%DEST_RES%~ #8  /* medium portrait (not used in most situations) */
	WRITE_ASCIIE 0x248 ~%DEST_RES%~ #8	/* override AI script */
	WRITE_ASCII 0x250 ~None~ #8	/* disable class AI script	*/
	WRITE_ASCII 0x258 ~None~ #8	/*	disable race AI script	*/
	WRITE_ASCII 0x260 ~None~ #8	/* disable general AI script	*/
	WRITE_ASCII 0x268 ~None~ #8	/*	disable default AI script	*/
	WRITE_ASCIIE 0x2cc ~%DEST_RES%~ #8 /* dialogue */
	WRITE_ASCIIE 0x280 ~%DEST_RES%~ #32 /* death variable */
END

/* Set up Aran's creature file to match player choices */
DEFINE_PATCH_MACRO ~aran_cre_setup~ BEGIN
	SPRINT ~added_helm~ ~nothing~
	SPRINT ~added_armor~ ~nothing~
	SPRINT ~added_shield~ ~nothing~
	SPRINT ~added_weapon1~ ~nothing~
	SPRINT ~added_weapon2~ ~nothing~
	SPRINT ~added_ammo~ ~nothing~
	SPRINT ~added_bow~ ~nothing~
	SPRINT ~added_item~ ~nothing~
	SAY NAME1 @68
	SAY NAME2 @69
	SAY INITIAL_MEETING @70
	SAY MORALE @71
	SAY HAPPY @72
	SAY UNHAPPY_ANNOYED @73
	SAY UNHAPPY_SERIOUS @74
	SAY UNHAPPY_BREAKING_POINT @75
	SAY LEADER @76
	SAY TIRED @77
	SAY BORED @78
	SAY BATTLE_CRY1 @79
	SAY BATTLE_CRY2 @80
	SAY BATTLE_CRY3 @81
	SAY BATTLE_CRY4 @82
	SAY BATTLE_CRY5 @83
	SAY DAMAGE @84
	SAY DYING @85
	SAY HURT @86
	SAY AREA_FOREST @87
	SAY AREA_CITY @88
	SAY AREA_DUNGEON @89
	SAY AREA_DAY @90
	SAY AREA_NIGHT @91
	SAY SELECT_COMMON1 @92
	SAY SELECT_COMMON2 @93
	SAY SELECT_COMMON3 @94
	SAY SELECT_COMMON4 @95
	SAY SELECT_COMMON5 @96
	SAY SELECT_COMMON6 @97
	SAY SELECT_ACTION1 @98
	SAY SELECT_ACTION2 @99
	SAY SELECT_ACTION3 @100
	SAY SELECT_ACTION4 @101
	SAY SELECT_ACTION5 @102
	SAY SELECT_ACTION6 @103
	SAY SELECT_ACTION7 @104
	SAY SELECT_RARE1 @105
	SAY SELECT_RARE2 @106
	SAY CRITICAL_HIT @107
	SAY CRITICAL_MISS @108
	SAY TARGET_IMMUNE @109
	SAY INVENTORY_FULL @110
	SAY PICKED_POCKET @111
	SAY HIDDEN_IN_SHADOWS @112
	SAY SPELL_DISRUPTED @113
	SAY SET_A_TRAP @114
	SAY BIO @115
	/* OK, now let's set his dialog, script name, scripts, default portrait, and hair/skin for the default portraits... */
	WRITE_ASCII 0x2cc ~C-ARAN~ #8 /* dialogue */
	WRITE_ASCII 0x280 ~C-ARAN~ #32 /* DV */
	WRITE_ASCII 0x248 ~C-ARAN~ #8 /*	override script */
	WRITE_ASCII 0x0268 ~WTARSGT~ #8 /*	Creature script - Default	*/
	PATCH_IF GAME_IS ~bg2ee eet~ THEN BEGIN
		WRITE_ASCII 0x34	~c-aranwl~ #8	/* assign small portrait : bg2:ee uses one portrait and resizes it on the fly to fit the needed window */
		WRITE_ASCII 0x3c	~c-aranwl~ #8	/* assign medium portrait : bg2:ee uses one portrait and resizes it on the fly to fit the needed window */
	END ELSE BEGIN
		WRITE_ASCII 0x34	~c-aranws~ #8	/* assign small portrait */
		WRITE_ASCII 0x3c	~c-aranwm~ #8	/* assign medium portrait */
	END
	WRITE_BYTE 0x2F 12 /* skin color (light carnation pink) */
	WRITE_BYTE 0x32 3	/* hair color (light gold) */
	/* and finally, let's adjust his equipment to match player choices */
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_armor_choice% = 1)) THEN BEGIN /* down-and-out Aran leather */
		SPRINT ~added_helm~ ~helm01~ // helmet
		SPRINT ~added_armor~ ~leat02~ // leather armor +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_armor_choice% = 1)) THEN BEGIN /* average Aran leather */
		SPRINT ~added_helm~ ~helm08~ // helmet
		SPRINT ~added_armor~ ~leat11~ // leather armor +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_armor_choice% = 1)) THEN BEGIN /* successful Aran leather */
		SPRINT ~added_helm~ ~helm09~ // helmet
		SPRINT ~added_armor~ ~leat12~ // leather armor +3
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_armor_choice% = 2)) THEN BEGIN /* down-and-out Aran studded leather */
		SPRINT ~added_helm~ ~helm10~ // helmet
		SPRINT ~added_armor~ ~leat04~ // studded leather armor
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_armor_choice% = 2)) THEN BEGIN /* average Aran studded leather */
		SPRINT ~added_helm~ ~helm11~ // helmet
		SPRINT ~added_armor~ ~leat05~ // studded leather armor +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_armor_choice% = 2)) THEN BEGIN /* successful Aran studded leather */
		SPRINT ~added_helm~ ~helm12~ // helmet
		SPRINT ~added_armor~ ~leat15~ // studded leather armor +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_armor_choice% = 3)) THEN BEGIN /* down-and-out Aran chainmail */
		SPRINT ~added_helm~ ~helm01~ // helmet
		SPRINT ~added_armor~ ~chan01~ // chainmail
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_armor_choice% = 3)) THEN BEGIN /* average Aran chainmail */
		SPRINT ~added_helm~ ~helm08~ // helmet
		SPRINT ~added_armor~ ~chan02~ // chainmail +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_armor_choice% = 3)) THEN BEGIN /* successful Aran chainmail */
		SPRINT ~added_helm~ ~helm09~ // helmet
		SPRINT ~added_armor~ ~chan08~ // chainmail +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_armor_choice% = 4)) THEN BEGIN /* down-and-out Aran splint armor */
		SPRINT ~added_helm~ ~helm10~ // helmet
		SPRINT ~added_armor~ ~chan04~ // splint mail
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_armor_choice% = 4)) THEN BEGIN /* average Aran splint armor */
		SPRINT ~added_helm~ ~helm11~ // helmet
		SPRINT ~added_armor~ ~chan05~ // splint mail +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_armor_choice% = 4)) THEN BEGIN /* successful Aran splint armor */
		SPRINT ~added_helm~ ~helm12~ // helmet
		SPRINT ~added_armor~ ~chan08~ // chain mail +2 - Nythrun is right - no generic high end splint. Create custom item?
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_armor_choice% = 5)) THEN BEGIN /* down-and-out Aran	*/
		SPRINT ~added_helm~ ~helm01~ // helmet
		SPRINT ~added_armor~ ~plat01~ // plate mail armor AC 3
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_armor_choice% = 5)) THEN BEGIN /* average Aran */
		SPRINT ~added_helm~ ~helm08~ // helmet
		SPRINT ~added_armor~ ~plat10~ // plate mail +1 - looks better than 02, AC 2
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_armor_choice% = 5)) THEN BEGIN /* successful Aran */
		SPRINT ~added_helm~ ~helm09~ // helmet
		SPRINT ~added_armor~ ~plat04~ // full plate mail, AC 1
	END // begin a new patch-if statement
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 1)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 1 // Long Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~dagg01~ // dagger
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 1)) THEN BEGIN /* average Aran */
		/* 2 - 1 // Long Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~dagg02~ // dagger +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 1)) THEN BEGIN /* successful Aran */
		/* 3 - 1 // Long Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~dagg15~ // dagger +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 2)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 2	 Long Sword, Shield, Quarterstaff */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~staf01~ // quarterstaff
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 2)) THEN BEGIN /* average Aran */
		/* 2 - 2	Long Sword, Shield, Quarterstaff */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~staf02~ // quarterstaff +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 2)) THEN BEGIN /* successful Aran */
		/* 3 - 2	Long Sword, Shield, Quarterstaff */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~staf08~ // quarterstaff +3
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 3)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 3	 Long Sword, Shield, Potions of healing */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_item~ ~potn52~
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 3)) THEN BEGIN /* average Aran */
		/* 2 - 3	 Long Sword, Shield, Potions of healing */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_item~ ~potn52~
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 3)) THEN BEGIN /* successful Aran */
		/* 3 - 3	Long Sword, Shield, Potions of healing */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_item~ ~potn52~
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 4)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 4	Long Sword, Shield, Mace */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~blun04~ // mace
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 4)) THEN BEGIN /* average Aran */
		/* 2 - 4	 Long Sword, Shield, Mace */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~blun05~ // mace +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 4)) THEN BEGIN /* successful Aran */
		/* 3 - 4	 Long Sword, Shield, Mace */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~blun21~ // mace +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 5)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 5	Long Sword, Shield, Flail */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~blun02~ // flail
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 5)) THEN BEGIN /* average Aran */
		/* 2 - 5	Long Sword, Shield, Flail */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~blun02~ // flail
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 5)) THEN BEGIN /* successful Aran */
		/* 3 - 5	Long Sword, Shield, Flail */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~blun03~ // flail +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 6)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 6	 Long Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_bow~ ~bow03~ // long bow
		SPRINT ~added_ammo~ ~arow01~ // arrow
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 6)) THEN BEGIN /* average Aran */
		/* 2 - 6	Long Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_bow~ ~bow04~ // long bow +1
		SPRINT ~added_ammo~ ~arow08~ // arrow of fire
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 6)) THEN BEGIN /* successful Aran */
		/* 3 - 6	Long Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_bow~ ~bow17~ // long bow +2
		SPRINT ~added_ammo~ ~arow02~ // arrow +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 7)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 7	 Bastard Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h01~ // bastard sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~dagg01~ // dagger
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 7)) THEN BEGIN /* average Aran */
		/* 2 - 7	Bastard Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h02~ // bastard sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~dagg02~ // dagger +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 7)) THEN BEGIN /* successful Aran */
		/* 3 - 7	 Bastard Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h42~ // bastard sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~dagg15~ // dagger +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 8)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 8	 Bastard Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h01~ // bastard sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_bow~ ~bow03~ // long bow
		SPRINT ~added_ammo~ ~arow01~ // arrow
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 8)) THEN BEGIN /* average Aran */
		/* 2 - 8	Bastard Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h02~ // bastard sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_bow~ ~bow04~ // long bow +1
		SPRINT ~added_ammo~ ~arow08~ // arrow of fire
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 8)) THEN BEGIN /* successful Aran */
		/* 3 - 8	 Bastard Sword, Shield, Long Bow	*/
		SPRINT ~added_weapon1~ ~sw1h42~ // bastard sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_bow~ ~bow17~ // long bow +2
		SPRINT ~added_ammo~ ~arow02~ // arrow +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 9)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 9	 Long Sword, Shield, Crossbow	*/
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_bow~ ~xbow04~ // light crossbow
		SPRINT ~added_ammo~ ~bolt02~ // +1 bolts
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 9)) THEN BEGIN /* average Aran */
		/* 2 - 9	Long Sword, Shield, Crossbow	*/
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_bow~ ~xbow05~ // light crossbow +1
		SPRINT ~added_ammo~ ~bolt03~ // bolt of lightning
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 9)) THEN BEGIN /* successful Aran */
		/* 3 - 9	Long Sword, Shield, Crossbow	*/
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_bow~ ~xbow09~ // light crossbow +2
		SPRINT ~added_ammo~ ~bolt06~ // +2 bolts
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 10)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 10	 Short Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h07~ // short sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~dagg01~ // dagger
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 10)) THEN BEGIN /* average Aran */
		/* 2 - 10	 Short Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h08~ // short sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~dagg02~ // dagger +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 10)) THEN BEGIN /* successful Aran */
		/* 3 - 10	Short Sword, Shield, Dagger */
		SPRINT ~added_weapon1~ ~sw1h09~ // short sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~dagg15~ // dagger +2
	END ELSE
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 11)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 11	 Short Sword, Shield, Crossbow */
		SPRINT ~added_weapon1~ ~sw1h07~ // short sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_bow~ ~xbow04~ // light crossbow
		SPRINT ~added_ammo~ ~bolt02~ // +1 bolts
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 11)) THEN BEGIN /* average Aran */
		/* 2 - 11	Short Sword, Shield, Crossbow */
		SPRINT ~added_weapon1~ ~sw1h08~ // short sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_bow~ ~xbow05~ // light crossbow +1
		SPRINT ~added_ammo~ ~bolt03~ // bolt of lightning
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 11)) THEN BEGIN /* successful Aran */
		/* 3 - 11	Short Sword, Shield, Crossbow */
		SPRINT ~added_weapon1~ ~sw1h09~ // short sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_bow~ ~xbow09~ // light crossbow +2
		SPRINT ~added_ammo~ ~bolt06~ // +2 bolts
	END
	PATCH_IF ((%aran_wealth% = 1) AND (%aran_weapon_set% = 12)) THEN BEGIN /* down-and-out Aran */
		/* 1 - 12	 Long Sword, Shield, Hammer */
		SPRINT ~added_weapon1~ ~sw1h04~ // long sword
		SPRINT ~added_shield~ ~shld05~ // large shield
		SPRINT ~added_weapon2~ ~hamm01~ // war hammer
	END ELSE
	PATCH_IF ((%aran_wealth% = 2) AND (%aran_weapon_set% = 12)) THEN BEGIN /* average Aran */
		/* 2 - 12	Long Sword, Shield, Hammer */
		SPRINT ~added_weapon1~ ~sw1h05~ // long sword +1
		SPRINT ~added_shield~ ~shld04~ // medium shield +1
		SPRINT ~added_weapon2~ ~hamm02~ // war hammer +1
	END ELSE
	PATCH_IF ((%aran_wealth% = 3) AND (%aran_weapon_set% = 12)) THEN BEGIN /* successful Aran */
		/* 3 - 12 Long Sword, Shield, Hammer */
		SPRINT ~added_weapon1~ ~sw1h41~ // long sword +2
		SPRINT ~added_shield~ ~shld06~ // large shield +1
		SPRINT ~added_weapon2~ ~hamm08~ // war hammer +2
	END // begin writing to the .cre file now
	PATCH_IF (~%added_helm%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_helm%~ #0 #0 #0 IDENTIFIED HELMET
	END
	PATCH_IF (~%added_armor%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_armor%~ #0 #0 #0 IDENTIFIED ARMOR
	END
	PATCH_IF (~%added_shield%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_shield%~	#0	#0 #0 IDENTIFIED INV
	END
	PATCH_IF (~%added_weapon1%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_weapon1%~ #0	#0 #0 IDENTIFIED WEAPON
	END
	PATCH_IF (~%added_weapon2%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_weapon2%~ #0	#0 #0 IDENTIFIED WEAPON
	END
	PATCH_IF (~%added_bow%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_bow%~	#0	#0 #0 IDENTIFIED WEAPON EQUIP TWOHANDED
	END
	PATCH_IF (~%added_ammo%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_ammo%~ #20 #0 #0 IDENTIFIED QUIVER
	END
	PATCH_IF (~%added_item%~ STR_CMP ~nothing~) THEN BEGIN
		ADD_CRE_ITEM ~%added_item%~ #5 #0 #0 IDENTIFIED QITEM
	END
END

/* fix up ALTER_AREA_REGION with Argent's "info point text detection" */

DEFINE_PATCH_FUNCTION ARGENT_ALTER_AREA_REGION
  INT_VAR type        = "-1" // region type at 0x20; negative values mean no change
          cursor      = "-1" // cursor type at 0x34; negative values mean no change
          trap_detect = "-1" // difficulty of trap detection at 0x68; negative values mean no change
          trap_remove = "-1" // difficulty of trap removal at 0x6a; negative values mean no change
          trapped     = "-1" // is trapped? at 0x6c; negative values mean no change
          detected    = "-1" // is detected? at 0x6e; negative values mean no change
          info_strref = "-2" // info text at 0x64; negative values < -1 mean no change
          // flag_ vars affect flags starting at 0x60; 0 means remove flag, 1 means add flag, -1 no change
          flag_locked           = "-1" // locked, bit0
          flag_resets           = "-1" // trap resets, bit1
          flag_party_required   = "-1" // party required, bit2
          flag_trap_detectable  = "-1" // trap can be detected, bit3
          flag_trap_enemies     = "-1" // trap can be set off by enemies, bit4
          flag_tutorial         = "-1" // tutorial trigger, bit5
          flag_trap_npcs        = "-1" // trap can be set off by npcs, bit6
          flag_silent           = "-1" // silent trigger, bit7
          flag_deactivated      = "-1" // deactivated, bit8
          flag_impassable_npc   = "-1" // can not be passed by npcs, bit9
          flag_activation_point = "-1" // use activation point, bit10
          flag_connect_to_door  = "-1" // connected to door, bit11
  STR_VAR region_name = ""     // required, at 0x00, used to match region
          destination_area    = "same" // changes destination area at 0x38; "same" means no change
          entrance_name     = "same" // changes entrance name at 0x40; "same" means no change
          door_key     = "same" // resref of key to unlock at 0x74; "same" means no change
          door_script  = "same" // resref of region script at 0x7c; "same" means no change
BEGIN
  READ_SHORT 0x5a trig_num
  READ_LONG  0x5c trig_off
  FOR (index = 0 ; index < trig_num ; ++index) BEGIN
    READ_ASCII (trig_off + (index * 0xc4)) trig_name_file (32) NULL
    PATCH_IF ("%region_name%" STRING_COMPARE_CASE  "%trig_name_file%" = 0) BEGIN
      PATCH_IF (type >= 0)                 BEGIN WRITE_SHORT (trig_off + 0x20 + (index * 0xc4)) type        END
      PATCH_IF (cursor >= 0)               BEGIN WRITE_LONG  (trig_off + 0x34 + (index * 0xc4)) cursor      END
      PATCH_IF (info_strref >= "-1")       BEGIN WRITE_LONG  (trig_off + 0x64 + (index * 0xc4)) info_strref END
      PATCH_IF (trap_detect >= 0)          BEGIN WRITE_SHORT (trig_off + 0x68 + (index * 0xc4)) trap_detect END
      PATCH_IF (trap_remove >= 0)          BEGIN WRITE_SHORT (trig_off + 0x6a + (index * 0xc4)) trap_remove END
      PATCH_IF (trapped >= 0)              BEGIN WRITE_SHORT (trig_off + 0x6c + (index * 0xc4)) trapped     END
      PATCH_IF (detected >= 0)             BEGIN WRITE_SHORT (trig_off + 0x6e + (index * 0xc4)) detected    END
      PATCH_IF (flag_locked = 0)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11111110) END
      PATCH_IF (flag_resets = 0)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11111101) END
      PATCH_IF (flag_party_required = 0)   BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11111011) END
      PATCH_IF (flag_trap_detectable = 0)  BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11110111) END
      PATCH_IF (flag_trap_enemies = 0)     BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11101111) END
      PATCH_IF (flag_tutorial = 0)         BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b11011111) END
      PATCH_IF (flag_trap_npcs = 0)        BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b10111111) END
      PATCH_IF (flag_silent = 0)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BAND 0b01111111) END
      PATCH_IF (flag_deactivated = 0)      BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BAND 0b11111110) END
      PATCH_IF (flag_impassable_npc = 0)   BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BAND 0b11111101) END
      PATCH_IF (flag_activation_point = 0) BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BAND 0b11111011) END
      PATCH_IF (flag_connect_to_door = 0)  BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BAND 0b11110111) END
      PATCH_IF (flag_locked = 1)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT0) END
      PATCH_IF (flag_resets = 1)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT1) END
      PATCH_IF (flag_party_required = 1)   BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT2) END
      PATCH_IF (flag_trap_detectable = 1)  BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT3) END
      PATCH_IF (flag_trap_enemies = 1)     BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT4) END
      PATCH_IF (flag_tutorial = 1)         BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT5) END
      PATCH_IF (flag_trap_npcs = 1)        BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT6) END
      PATCH_IF (flag_silent = 1)           BEGIN WRITE_BYTE  (trig_off + 0x60 + (index * 0xc4)) (THIS BOR BIT7) END
      PATCH_IF (flag_deactivated = 1)      BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BOR BIT0) END
      PATCH_IF (flag_impassable_npc = 1)   BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BOR BIT1) END
      PATCH_IF (flag_activation_point = 1) BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BOR BIT2) END
      PATCH_IF (flag_connect_to_door = 1)  BEGIN WRITE_BYTE  (trig_off + 0x61 + (index * 0xc4)) (THIS BOR BIT3) END
      PATCH_IF ("%destination_area%" STRING_COMPARE_CASE "same") BEGIN
        WRITE_ASCIIE (trig_off + 0x38 + (index * 0xc4)) "%destination_area%" #8
      END
      PATCH_IF ("%entrance_name%" STRING_COMPARE_CASE "same") BEGIN
        WRITE_ASCIIE (trig_off + 0x40 + (index * 0xc4)) "%entrance_name%" #32
      END
      PATCH_IF ("%door_key%" STRING_COMPARE_CASE "same") BEGIN
        WRITE_ASCIIE (trig_off + 0x74 + (index * 0xc4)) "%door_key%" #8
      END
      PATCH_IF ("%door_script%" STRING_COMPARE_CASE "same") BEGIN
        WRITE_ASCIIE (trig_off + 0x7c + (index * 0xc4)) "%door_script%" #8
      END
    END
  END

END

/* end of define all macros */
